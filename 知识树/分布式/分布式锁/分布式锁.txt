锁冲突处理
	讲了分布式锁的问题，但是没有提到客户端在处理请求时加锁没加成功怎么办。
	一般有 3 种策略来处理加锁失败：
	Redis 深度历险：核心原理与应用实践 | 钱文品 著
	第 32 页 共 226 页
	1、直接抛出异常，通知用户稍后重试；
	2、sleep 一会再重试；
	3、将请求转移至延时队列，过一会再试；

	直接抛出特定类型的异常
	这种方式比较适合由用户直接发起的请求，用户看到错误对话框后，会先阅读对话框的内
	容，再点击重试，这样就可以起到人工延时的效果。如果考虑到用户体验，可以由前端的代码
	替代用户自己来进行延时重试控制。它本质上是对当前请求的放弃，由用户决定是否重新发起
	新的请求。
	sleep
	sleep 会阻塞当前的消息处理线程，会导致队列的后续消息处理出现延迟。如果碰撞的比
	较频繁或者队列里消息比较多，sleep 可能并不合适。如果因为个别死锁的 key 导致加锁不成
	功，线程会彻底堵死，导致后续消息永远得不到及时处理。
	延时队列
	这种方式比较适合异步消息处理，将当前冲突的请求扔到另一个队列延后处理以避开冲突。