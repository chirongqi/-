幂等简单的定义：

系统中的多次操作，不管多少次，都应该产生一样的效果，或返回一样的效果。

比如实际的业务请求为创建一个活动，理论上需要根据业务形态开发幂等创建活动的接口，
这样在相同参数调用接口多次创建活动时，只可以创建成功一次。

由于查询天生的是幂等请求，所以针对于查询场景可以不做业务角度的幂等约束，查询幂等的约束多是针对于
资源控制，安全防刷，流控来做的。


总结
针对于幂等操作还有如下几种方案：
1.删除/修改操作，一定要带入版本号和原始修改参数，万不可直接在下游逻辑中直接i++，i--
2.为进一步拦截真实数据罗库，需要在数据库表中创建唯一约束，防止因为分布式系统锁问题或数据不一致问题导致拦截不到，
这样在DB层建立最后一次兜底策略
3.token机制，可以做类似于页面重复提交的功能，token可以放到redis中，并自带实效
4.悲观锁/乐观锁，一般分为分布式锁，单机锁，update where
5.有限状态机，订单系统一般都会设计一个订单状态流转的状态机，表述在不同状态下的状态变更，只有在上一个状态满足时，
才会进行接下来的状态变更，这样保证了状态变更的幂等性
6.接口调用最好引入来源source，序列号seq等信息，可以用source+seq做唯一索引，也可以将这两个值上报做好监控
7.监控和开关，为可以更直观的观察系统幂等情况，可以建立对应的监控大盘，及告警配置，这样可以更直观的发现问题，
同时配置相应的开关，在发现问题时比如被刷时，通过调控开关及时止损。